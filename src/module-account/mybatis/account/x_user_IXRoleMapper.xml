<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yemh.xqsrd.account.mapper.IXRoleMapper">
    <!-- 结果集 -->
    <resultMap id="BaseResultMap" type="java.util.LinkedHashMap" >
        <result column="xid" property="xId" jdbcType="BIGINT" />
        <result column="role_name" property="loginName" jdbcType="VARCHAR" />
        <result column="role_description" property="roleDescription" jdbcType="VARCHAR" />
    </resultMap>
	<sql id="Base_Column_List">
		xid xId, 
		role_name roleName,
		role_description roleDescription,  
        DATE_FORMAT(gmt_create,'%Y-%m-%d %h:%m:%s') gmtCreate, 
        DATE_FORMAT(gmt_modified,'%Y-%m-%d %h:%m:%s') gmtModified
	</sql>
	<!-- 查询List    resultType="java.util.LinkedHashMap"-->
    <select id="getRoleList" parameterType="Map" resultType="java.util.LinkedHashMap" >
        select
        <include refid="Base_Column_List" />
        from x_role
        <where>
            <if test="roleName != null and roleName != ''"><![CDATA[ and role_name like concat(concat('%',#{roleName}),'%')]]></if>
            <if test="roleDescription != null and roleDescription != ''"><![CDATA[ and role_description like concat(concat('%',#{roleDescription}),'%')]]></if>
            <if test="keyword != null and keyword != ''">
            <![CDATA[ or role_name like concat(concat('%',#{keyword}),'%')]]>
            <![CDATA[ or role_description like concat(concat('%',#{keyword}),'%')]]>
            </if>
            <if test="gmtCreate_min != null and gmtCreate_min != ''"><![CDATA[ and gmt_create > #{gmtCreate_min}]]></if>
            <if test="gmtCreate_max != null and gmtCreate_max != ''"><![CDATA[ and gmt_create < #{gmtCreate_max}]]></if>
        </where>
        order by gmt_modified DESC, gmt_create DESC
    </select>
    <!-- 添加 -->
    <insert id="add">
        insert into x_role(
            role_name,
            role_description,
            gmt_create,
            gmt_modified
        )
        values(
            #{roleName},
            #{roleDescription},
            #{gmtCreate},
            #{gmtModified}
        )
    </insert>
    <!-- 更新 -->
    <update id="upd">
        update x_role
        <set>
            <if test="roleName != null or roleName != ''">role_name=#{roleName},</if>
            <if test="roleDescription != null or roleDescription != ''">role_description=#{roleDescription},</if>
            <if test="gmtModified != null or gmtModified != ''">gmt_modified=#{gmtModified},</if>
        </set>
        <where>
            xid=#{xId}
        </where>
    </update>
    <!-- 删除 -->
    <delete id="del">
        delete from x_role
        <where>
            xid in 
            <foreach collection="xIds" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </where>
    </delete>
    <!-- 添加权限 -->
    <insert id="addPermListByRoleId">
        insert into x_role_permission(
            x_role_id,
            x_permission_id,
            gmt_create,
            gmt_modified
        )
        values
        <foreach collection="ids" separator="," item="item">
            (
            #{roleId},
            #{item},
            #{gmtCreate},
            #{gmtModified}
            )
        </foreach>
    </insert>
    <!-- 删除权限 -->
    <delete id="delPermListByRoleId">
        delete from x_role_permission
        <where>
            x_role_id = #{roleId}
            and x_permission_id in 
            <foreach collection="ids" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </where>
    </delete>
    <select id="getListAllForUser" parameterType="Map" resultType="java.util.LinkedHashMap" >
        select distinct
            t1.xid xId, 
            t1.role_name roleName,
            t1.role_description roleDescription,  
            DATE_FORMAT(t1.gmt_create,'%Y-%m-%d %h:%m:%s') gmtCreate, 
            DATE_FORMAT(t1.gmt_modified,'%Y-%m-%d %h:%m:%s') gmtModified
            from x_role t1
        <where>
            t1.xid not in (
                select 
                t2.x_role_id
                from x_user_role t2  
                where 
                t2.x_user_id = #{userId}
            )
        </where>
        order by t1.gmt_modified DESC, t1.gmt_create DESC
    </select>
    <select id="getListByUserId" parameterType="Map" resultType="java.util.LinkedHashMap" >
        select 
        t1.xid xId,
        t1.role_name roleNameByRoleId,
        DATE_FORMAT(t1.gmt_create,'%Y-%m-%d %h:%m:%s') gmtCreate, 
        DATE_FORMAT(t1.gmt_modified,'%Y-%m-%d %h:%m:%s') gmtModified
        from x_role t1
        left join x_user_role t2
        on t1.xid = t2.x_role_id
        <where>
            t2.x_user_id = #{userId}
        </where>
        order by t1.gmt_modified DESC, t1.gmt_create DESC
    </select>
</mapper>